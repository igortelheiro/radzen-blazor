@page "/stack"

<RadzenExample Name="Stack">
    <RadzenCard Class="my-4" style="display: flex; align-items: center; gap: 0.5rem">
        <div style="white-space:nowrap; margin-right: 16px">Orientation:</div>
        <RadzenSelectBar @bind-Value="@orientation" TextProperty="Text" ValueProperty="Value"
                         Data="@(Enum.GetValues(typeof(Orientation)).Cast<Orientation>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small" />
        <div style="white-space:nowrap;margin-left: 16px">Spacing:</div>
        <RadzenNumeric @bind-Value="@spacing" Format="0px" />
        <div style="white-space:nowrap;margin-left: 16px">Reverse:</div>
        <RadzenSwitch @bind-Value="@reverse" />
    </RadzenCard>

    <div class="col p-3" style="min-height: 300px;">
        <RadzenStack Orientation="@orientation" Spacing="@($"{spacing}px")" Reverse="@reverse">
            <RadzenCard Class="mt-3 rz-background-color-info rz-color-white rz-text-align-center" style="width: 100px;">
                A
            </RadzenCard>
            <RadzenCard Class="mt-3 rz-background-color-success rz-color-white rz-text-align-center" style="width: 100px;">
                B
            </RadzenCard>
            <RadzenCard Class="mt-3 rz-background-color-warning rz-color-white rz-text-align-center" style="width: 100px;">
                C
            </RadzenCard>
            <RadzenCard Class="mt-3 rz-background-color-danger rz-color-white rz-text-align-center" style="width: 100px;">
                D
            </RadzenCard>
        </RadzenStack>
    </div>

</RadzenExample>
@code {
    Orientation orientation = Orientation.Horizontal;
    double spacing = 10;
    bool reverse;
}
